<adonisControls:AdonisWindow 
     x:Class="Editor.MainWindow"
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:monoGameControls="clr-namespace:Editor.MonoGameControls"
     xmlns:local="clr-namespace:Editor"
     xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
     xmlns:system="clr-namespace:System;assembly=mscorlib"
     xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
     xmlns:sprite="clr-namespace:Nova.Common.Sprite;assembly=Nova.Common"
     mc:Ignorable="d"
     Title="Editor" 
     WindowStartupLocation="CenterScreen"
     Width="1600"
     Height="1000" 
     ShrinkTitleBarWhenMaximized="true">
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="200*"/>
        </Grid.ColumnDefinitions>
        <Menu DockPanel.Dock="Top" Grid.ColumnSpan="2">
            <MenuItem Header="_File">
                <MenuItem Header="_New" />
                <MenuItem Header="_Open..." />
                <Separator />
                <MenuItem Header="_Save" />
                <MenuItem Header="Save _As..." />
                <Separator />
                <MenuItem Header="E_xit" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" />
                <MenuItem Header="_Redo" />
                <Separator />
                <MenuItem Header="Cu_t" />
                <MenuItem Header="_Copy" />
                <MenuItem Header="_Paste" />
                <MenuItem Header="_Delete" />
                <Separator />
                <MenuItem Header="Select _All" />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About Editor" />
            </MenuItem>
        </Menu>

        <monoGameControls:MonoGameContentControl Grid.Row="1" Grid.Column="0" x:Name="MonoGameContentControl" MouseWheel="UIElement_OnMouseWheel" MouseMove="UIElement_OnMouseMove" MouseLeftButtonDown="UIElement_OnMouseLeftButtonDown" MouseLeftButtonUp="UIElement_OnMouseLeftButtonUp"/>


        <TabControl Grid.Row="1" Grid.Column="1" Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" SelectionChanged="Selector_OnSelectionChanged">
            <TabItem Header="Sheet">
                <Grid Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <Button Content="Load from image" Name="LoadFromImageButton" Command="{Binding LoadFromImageCommand}"/>
                        <Button Content="Load from asset" Name="LoadFromAsset" Command="{Binding LoadFromAssetCommand}"/>

                        <Button Content="Save" Margin="10,0,0,0" Command="{Binding SaveCommand}"/>
                    </StackPanel>

                    <Grid Grid.Row="1" Margin="0,20,0,0" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- Grid Size -->
                        <TextBox Grid.Row="0" Grid.Column="0" Name="SpriteCountTextBox" HorizontalAlignment="Left" Width="100">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{Binding GridDimensionEnterPressedCommand}" CommandParameter="{Binding Text, ElementName=SpriteCountTextBox}"></KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="Grid size" VerticalAlignment="Center"/>

                        <CheckBox Grid.Column="0" Name="SplitOnRows" VerticalAlignment="Center" Grid.Row="2" Command="{Binding TreatRowAsNewSheetCommand}" CommandParameter="{Binding IsChecked, ElementName=SplitOnRows}"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" Text="Treat every row as new sheet" VerticalAlignment="Center"/>


                        <TextBox Grid.Row="6" Name="NameTextBox" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock Grid.Row="6" Grid.Column="2" Text="Name" VerticalAlignment="Center"/>
                    </Grid>


                    <GroupBox Header="Animation" Grid.Row="3" Grid.ColumnSpan="3" HorizontalContentAlignment="Stretch">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <CheckBox Name="IsAnimation" VerticalAlignment="Center" IsChecked="{Binding IsAnimation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Is animation" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBox Name="AnimationStartDelayTextBox" Width="200" Margin="0,0,10,0" VerticalAlignment="Center" Text="{Binding AnimationStartDelay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Animation start delay in ms" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBox Name="TimeBetweenAnimationsTextBox" Width="200" Margin="0,0,10,0" VerticalAlignment="Center" Text="{Binding TimeBetweenSprites, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Time between frames in ms" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                <CheckBox Name="ReverseAtEnd" VerticalAlignment="Center" IsChecked="{Binding ReverseAtEnd, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Reverse at end" VerticalAlignment="Center"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Sprites" Grid.Row="4" Grid.ColumnSpan="3" HorizontalContentAlignment="Stretch">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="200"/>
                            </Grid.RowDefinitions>
                            <TreeView HorizontalContentAlignment="Stretch" Name="SpriteTreeView" ItemsSource="{Binding TreeItems}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectedItemChanged">
                                        <i:InvokeCommandAction Command="{Binding SpriteSelectedCommand}" CommandParameter="{Binding ElementName=SpriteTreeView, Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="IsExpanded" Value="True"/>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type local:SpriteSheetViewModel}" ItemsSource="{Binding Sprites}">
                                        <TextBlock Foreground="White" Text="{Binding SpriteSheet.Name}"/>
                                    </HierarchicalDataTemplate>
                                    <DataTemplate DataType="{x:Type sprite:Sprite}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Foreground="White" Text="{Binding Name}" Grid.Column="0" FontWeight="Bold"/>
                                            <TextBlock Foreground="White" Text="{Binding X}" HorizontalAlignment="Right" Grid.Column="1" Margin="40,0,0,0"/>
                                            <TextBlock Foreground="White" Text="{Binding Y}" HorizontalAlignment="Right" Grid.Column="2" Margin="20,0,0,0"/>
                                        </Grid>
                                    </DataTemplate>
                                </TreeView.Resources>
                            </TreeView>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Sprite" Grid.Row="5" Grid.ColumnSpan="3" HorizontalContentAlignment="Stretch" Visibility="{Binding SpritePanelVisibility}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid Margin="0,0,0,0" HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Row="0" Grid.Column="0" Name="SpriteName" VerticalAlignment="Center" Text="{Binding SpritePanelName}"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="Name" VerticalAlignment="Center" Margin="10,0,0,0"/>
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Noise">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <RadioButton GroupName="NoiseType" Content="Perlin" IsChecked="{Binding PerlinNoiseSelected}"/>
                    <RadioButton Grid.Row="1" Margin="0,10,0,0" GroupName="NoiseType" Content="Simplex" IsChecked="{Binding SimplexNoiseSelected}"/>

                    <RadioButton Grid.Row="3" Margin="0,10,0,0" GroupName="NoiseType" Content="Simplex S" IsChecked="{Binding SimplexSNoiseSelected}"/>
                    <RadioButton Grid.Row="4" Margin="0,10,0,0" GroupName="NoiseType" Content="Cellular" IsChecked="{Binding CellularNoiseSelected}"/>
                    <RadioButton Grid.Row="5" Margin="0,10,0,0" GroupName="NoiseType" Content="Value" IsChecked="{Binding ValueNoiseSelected}"/>
                    <RadioButton Grid.Row="6" Margin="0,10,0,0" GroupName="NoiseType" Content="Value (Cubic)" IsChecked="{Binding ValueCubicNoiseSelected}"/>


                    <TextBox Text="{Binding Seed}" Grid.Row="7" Margin="0,10,0,0"/>
                    <Button Grid.Row="8" Content="Generate" Margin="0,10,0,0" Command="{Binding GenerateNoiseCommand}"/>
                </Grid>
            </TabItem>
            <TabItem Header="Test"></TabItem>
        </TabControl>
    </Grid>
</adonisControls:AdonisWindow>